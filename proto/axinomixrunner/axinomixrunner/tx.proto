syntax = "proto3";

package axinomixrunner.axinomixrunner;

option go_package = "axinomix-runner/x/axinomixrunner/types";

// Msg defines the Msg service.
service Msg {
  rpc StartRace         (MsgStartRace        ) returns (MsgStartRaceResponse        );
  rpc EndRace           (MsgEndRace          ) returns (MsgEndRaceResponse          );
  rpc BankReplenishment (MsgBankReplenishment) returns (MsgBankReplenishmentResponse);
  rpc WithdrawBank      (MsgWithdrawBank     ) returns (MsgWithdrawBankResponse     );
}
message MsgStartRace {
  string creator = 1;
  string amount  = 2;
  string mode = 3;
}

message MsgStartRaceResponse {
  uint64 id = 1;
  uint64 needToCollectCoins = 2;
}

message MsgEndRace {
  string creator = 1;
  uint64 coins   = 2;
  uint64 score   = 3;
  uint64 id      = 4;
}

message MsgEndRaceResponse {
  uint64 id = 1;
  string winAmount = 2;
}

message MsgBankReplenishment {
  string creator = 1;
  string amount  = 2;
}

message MsgBankReplenishmentResponse {}

message MsgWithdrawBank {
  string creator = 1;
  string amount  = 2;
}

message MsgWithdrawBankResponse {}

